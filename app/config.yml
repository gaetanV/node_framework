framework:
    templating:
        engines: ['pug','mustache','html']
    compression_gzip: true
    session : Ops56qs5dé=&à&é=dkqs^d
    bundles:
        UserBundle: { templating: mustache}  
    router:
        resource: /app/routing.yml

services:
    ws:
        class:  core\services\ws
        arguments: [ $host ,$bundles, $fs ,$yaml ,$path ,$db ,$emit]   
        cache : mongo
        # ['mongo','files','memory'] 
        params: 
            port: 8098  
            router: 
                resource: /app/stream.yml
            access_control:    
                -  { path: /user/.*                        , roles: [ROLE_ADMIN]          , auth: api_area       , whiteip:[192.168.0.11]  }

    longpolling:
        class:  core\services\longpolling 
        arguments: [ $app , $fs  ,$bundles ,$db,$yaml,$path,$emit ]  
        # ['mongo','files','memory']
        cache : memory
        params: 
            path: /event/
            router: 
                resource: /app/stream.yml
    polling:
        class:  core\services\polling 
        arguments: [ $app , $fs  ,$bundles ,$db,$yaml,$path,$emit ]  
        # ['mongo','files','memory']
        cache : files
        params: 
            path: /polling/
            router: 
                resource: /app/stream.yml            
    event:
        class:  core\services\event 
        arguments: [ $app , $fs  ,$bundles ,$db,$yaml,$path,$emit ]  
        # ['mongo','files','memory']
        cache : files
        params: 
            path: /news/
              

private_services:       
    apikey_authenticator:
        class:  UserBundle\Security\ApiKeyAuthenticator
    apikey_userprovider:
        class:  UserBundle\Security\ApiKeyUserProvider   
        
       
security:
    index: home.html

    auth:
        api_area:
            stateless: false
            authenticator: apikey_authenticator
            provider: apikey_userprovider
            
            
    access_control:
             -  { path: (.)*.(asp|aspx|php|jar|java|yml) , roles: DENY_ALL }
             -  { path: /admin/login.html                , roles: IS_AUTHENTICATED_ANONYMOUSLY , whiteip:[192.168.0.11]}
             -  { path: /admin/login_check               , roles: IS_AUTHENTICATED_ANONYMOUSLY , whiteip:[192.168.0.11] }
             -  { path: /admin/.*                        , roles: [ROLE_ADMIN]                 , whiteip:[192.168.0.11]  }
             #-  { path: /user/.*                         , roles: [ROLE_API]                   , auth: api_area }
             -  { path: /.*                              , roles: IS_AUTHENTICATED_ANONYMOUSLY }

