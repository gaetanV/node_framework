framework:
    templating:
        engines: ['pug','mustache','html']
    compression_gzip: true
    bundles:
        UserBundle: { templating: mustache}  
    router:
        resource: /app/routing.yml

services:
    
    #CACHE ['mongo','files','memory','redis']
    db:
        params:
    ws:
        params: 
            cache_type : memory
            port: 8098  
            router: 
                resource: /app/stream.yml
            access_control:    
                -  { path: /user/.* , roles: [ROLE_ADMIN] , auth: api_area , whiteip:[192.168.0.11]  }

private_services:       
    apikey_authenticator:
        class:  UserBundle/Security/ApiKeyAuthenticator
    apikey_userprovider:
        class:  UserBundle/Security/ApiKeyUserProvider   
        
       
security:
    index: home.html

    auth:
        api_area:
            stateless: false
            authenticator: apikey_authenticator
            provider: apikey_userprovider
            
            
    access_control:
             -  { path: (.)*.(asp|aspx|php|jar|java|yml) , roles: DENY_ALL }
             -  { path: /admin/login.html                , roles: IS_AUTHENTICATED_ANONYMOUSLY , whiteip:[192.168.0.11]}
             -  { path: /admin/login_check               , roles: IS_AUTHENTICATED_ANONYMOUSLY , whiteip:[192.168.0.11] }
             -  { path: /admin/.*                        , roles: [ROLE_ADMIN]                 , whiteip:[192.168.0.11], auth: api_area  }
             #-  { path: /user/.*                         , roles: [ROLE_API]                   , auth: api_area }
             -  { path: /.*                              , roles: IS_AUTHENTICATED_ANONYMOUSLY }

